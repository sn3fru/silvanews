#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Teste para verificar se as melhorias na extra√ß√£o de fonte de PDFs est√£o funcionando.
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from backend.prompts import PROMPT_EXTRACAO_GATEKEEPER_V13

def testar_prompt_fonte_pdf():
    """Testa se o prompt para extra√ß√£o de fonte de PDFs est√° correto."""
    
    print("üîç Testando prompt para extra√ß√£o de fonte de PDFs...")
    print("=" * 60)
    
    # Verifica se o prompt cont√©m as instru√ß√µes para PDFs
    prompt = PROMPT_EXTRACAO_GATEKEEPER_V13
    
    # Verifica se cont√©m as instru√ß√µes espec√≠ficas para PDFs
    instrucoes_pdf = [
        "EXTRACA√á√ÉO DE FONTE PARA PDFs",
        "jornal: Nome do jornal/revista/fonte impressa",
        "autor: Nome do autor/rep√≥rter quando dispon√≠vel",
        "pagina: N√∫mero da p√°gina ou se√ß√£o",
        "data: Data de publica√ß√£o quando dispon√≠vel",
        "jornal deve ser o nome real do jornal/revista, n√£o o nome do arquivo",
        "autor deve ser extra√≠do do texto quando dispon√≠vel",
        "pagina deve indicar a p√°gina espec√≠fica onde o artigo aparece",
        "data deve ser a data de publica√ß√£o da edi√ß√£o, n√£o a data de processamento"
    ]
    
    todas_instrucoes_presentes = True
    for instrucao in instrucoes_pdf:
        if instrucao.lower() in prompt.lower():
            print(f"‚úÖ {instrucao}")
        else:
            print(f"‚ùå {instrucao}")
            todas_instrucoes_presentes = False
    
    print("=" * 60)
    if todas_instrucoes_presentes:
        print("üéâ Todas as instru√ß√µes para PDFs est√£o presentes no prompt!")
    else:
        print("‚ö†Ô∏è Algumas instru√ß√µes para PDFs est√£o faltando no prompt.")
    
    return todas_instrucoes_presentes

def testar_formato_saida():
    """Testa se o formato de sa√≠da est√° correto."""
    
    print("\nüîç Testando formato de sa√≠da...")
    print("=" * 60)
    
    prompt = PROMPT_EXTRACAO_GATEKEEPER_V13
    
    # Verifica se o formato de sa√≠da inclui os campos necess√°rios
    campos_necessarios = [
        '"jornal":',
        '"autor":',
        '"pagina":',
        '"data":'
    ]
    
    todos_campos_presentes = True
    for campo in campos_necessarios:
        if campo in prompt:
            print(f"‚úÖ Campo {campo} presente no formato de sa√≠da")
        else:
            print(f"‚ùå Campo {campo} ausente no formato de sa√≠da")
            todos_campos_presentes = False
    
    print("=" * 60)
    if todos_campos_presentes:
        print("üéâ Todos os campos necess√°rios est√£o presentes no formato de sa√≠da!")
    else:
        print("‚ö†Ô∏è Alguns campos necess√°rios est√£o faltando no formato de sa√≠da.")
    
    return todos_campos_presentes

if __name__ == "__main__":
    print("üöÄ Iniciando testes das melhorias na extra√ß√£o de fonte de PDFs...")
    print()
    
    # Testa o prompt
    prompt_ok = testar_prompt_fonte_pdf()
    
    # Testa o formato de sa√≠da
    formato_ok = testar_formato_saida()
    
    print("\n" + "=" * 60)
    print("üìä RESUMO DOS TESTES")
    print("=" * 60)
    print(f"Prompt para PDFs: {'‚úÖ OK' if prompt_ok else '‚ùå FALHOU'}")
    print(f"Formato de sa√≠da: {'‚úÖ OK' if formato_ok else '‚ùå FALHOU'}")
    
    if prompt_ok and formato_ok:
        print("\nüéâ Todos os testes passaram! As melhorias est√£o funcionando.")
    else:
        print("\n‚ö†Ô∏è Alguns testes falharam. Verifique as implementa√ß√µes.")
